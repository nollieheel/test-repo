version: 2

jobs:

  # TODO actual building can be done here, i.e. pulling in of dependencies
  build:
    docker:
      - image: circleci/python:2.7.13
    working_directory: ~/test-repo
    steps:
      - checkout
      - run: "true"

  # TODO Put some tests in here
  test:
    docker:
      - image: circleci/python:2.7.13
    working_directory: ~/test-repo
    steps:
      - checkout
      - run: "true"

  # These are dependencies for the deploy script, not the app itself
  pull-deploy-deps:
    docker:
      - image: circleci/python:2.7.13
    working_directory: ~/test-repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-daenv-{{ checksum ".circleci/requirements.txt" }}
      - run:
          name: Pull in the pips
          command: |
            virtualenv daenv
            . daenv/bin/activate
            pip install -r .circleci/requirements.txt
      - save_cache:
          key: v1-daenv-{{ checksum ".circleci/requirements.txt" }}
          paths:
            - daenv

  deploy:
    docker:
      - image: circleci/python:2.7.13
    working_directory: ~/test-repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-daenv-{{ checksum ".circleci/requirements.txt" }}
      - run:
          name: Run Deploy Script
          command: |
            . daenv/bin/activate
            /bin/bash test/echo.sh

workflows:
  version: 2

  build-and-test:
    jobs:
      - build:
          filters:
            branches:
              ignore: prod
      - test:
          requires:
            - build
          filters:
            branches:
              ignore: prod

  production-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - prod
      - test:
          requires:
            - build
          filters:
            branches:
              only:
                - prod
      - pull-deploy-deps:
          requires:
            - test
          filters:
            branches:
              only:
                - prod
      - deploy:
          requires:
            - pull-deploy-deps
          filters:
            branches:
              only:
                - prod
